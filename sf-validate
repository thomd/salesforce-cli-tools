#!/usr/bin/env bash

#
# Validate a SFDX project against an Org and run unit tests
#
# USAGE
#
#     sf-validate                  # validate deployment with unit tests
#     sf-validate -n               # validate deployment without unit tests
#     sf-validate -o ORG           # validate deployment with unit tests on ORG
#
# COMMANDS
#
#     TESTS=$(awk '{ printf(" -t %s", $0) }' scripts/test/unit-test-list.txt)
#     sf project deploy validate -x manifest/package.xml -l RunSpecifiedTests $TESTS -o ORG             # validate and run specific unit-tests
#
#     sf project deploy start -x manifest/package.xml --dry-run --concise -l NoTestRun -o ORG           # validate only
#

yesno() {
  echo ""
  read -p " $1 [Y/n] " response
  [[ $response == "n" || $response == "N" ]] && exit 1
}

show_help() {
  awk '/^[^ #]/{c=1}c==0{print $0}' $0 | sed -n '/^#/p' | sed 1d | sed 's/^#/ /g' \
    | perl -pe "s/ #(.*)$/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/(USAGE|EXAMPLES|COMMANDS)/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/\`(.+)\`/$(tput sgr 0 1)\1$(tput sgr 0)/"
  exit 1
}

setTargetOrg() {
  if [[ -z "$org" ]]; then
    org=$(cat .sf/config.json 2>/dev/null | jq -r '."target-org" | select( . != null )')
  fi
  if [[ -z "$org" ]]; then
    org=$(cat ~/.sf/config.json 2>/dev/null | jq -r '."target-org" | select( . != null )')
  fi
  if [[ -z "$org" ]]; then
    echo -e >&2 "\n $(tput setaf 1)Missing target org$(tput sgr 0)\n\n   Either provide with $(tput setaf 0)-o$(tput sgr 0) option, or set via $(tput setaf 0)sf config set target-org <org>$(tput sgr 0)"
    exit 1
  fi
}

install-sf-plugin-if-missing() {
  local plugin=$1
  sf plugins | rg "$plugin" > /dev/null
  if [ "$?" == 1 ]; then
    allowFile="$HOME/.config/sf/unsignedPluginAllowList.json"
    [ ! -e "$allowFile" ] && echo "[]" > "$allowFile"
    tempFile=$(mktemp)
    cat "$allowFile" | jq "if index(\"${plugin}\") | not then . += [\"${plugin}\"] else . end" > "$tempFile" && mv "$tempFile" "$allowFile"
    sf plugins install "$plugin" >/dev/null 2>&1
  fi
}

org=""
unittests=1

while [ $# -gt 0 ]; do
  case $1 in
    -o)
      shift
      org=$1
      ;;
    -n)
      unittests=0
      ;;
    -h|--help)
      show_help
      ;;
    *)
      ;;
  esac
  shift
done
setTargetOrg

if [ "$unittests" == 1 ]; then
  yesno "Validate and run Unit Tests on $(tput setaf 1)${org}$(tput sgr0) ?"
  install-sf-plugin-if-missing "apextestlist"
  echo -e "\n $(tput setaf 2)Validate and run Unit Tests$(tput sgr0) ...\n"
  [ "$DEBUG" == "1" ] && echo -e "\n   $(tput setaf 0)sf project deploy validate -x manifest/package.xml -l RunSpecifiedTests \$(sf apextests list --ignore-missing-tests --no-warnings) --concise$(tput sgr0)\n"
  sf project deploy validate -x manifest/package.xml -l RunSpecifiedTests $(sf apextests list --ignore-missing-tests --no-warnings) --concise -o ${org}
else
  yesno "Validate on $(tput setaf 1)${org}$(tput sgr0) ?"
  echo -e "\n $(tput setaf 2)Validate$(tput sgr0) ..."
  [ "$DEBUG" == "1" ] && echo -e "\n   $(tput setaf 0)sf project deploy start -x manifest/package.xml -l NoTestRun --dry-run -o ${org}$(tput sgr0)\n"
  sf project deploy start -x manifest/package.xml -l NoTestRun --dry-run --concise -o ${org}
fi

exit 0
