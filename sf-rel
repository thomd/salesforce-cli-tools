#!/usr/bin/env bash

#
# given set of csv files (e.g. by using `sf-data`), extract all records related to a object id
#
# USAGE
#
#     sf-rel <Id>                               # extract records related to Id
#     sf-rel -l 2                               # extract down to level 2 [default: 1]
#
#
# NOTES
#
#     fd -e orig -x mv {} {.}                   # restore original csv files
#
#
# EXAMPLES
#
#     sf-data -s Account -s User -s Contact     # download data into current directory
#     sf-rel 0018E000027VckFQAS                 # extract records related to the account-id
#

level=1
id=000000000000000000
ids=''
rel_ids=$(mktemp)

while [ $# -gt 0 ]; do
  case $1 in
    -l)
      shift
      level=$1
      ;;
    -h|--help)
      cat $0 | sed -n '/^#/p' | sed '/^##/d' | sed 1d | sed 's/^#/ /g' \
        | perl -pe "s/ #(.*)$/$(tput setaf 0)\1$(tput sgr 0)/" \
        | perl -pe "s/(USAGE|NOTES|EXAMPLES)/$(tput setaf 8)\1$(tput sgr0)/"
      exit 1
      ;;
    *)
      ;;
  esac
  id=$1
  shift
done

if [ $id == '000' ]; then
  echo -e "\n $(tput setaf 1)ID missing$(tput sgr 0)"
  exit 1
fi

## backup
while read f; do
  [ ! -f "${f}.orig" ] && cp "$f" "${f}.orig"
done < <(fd -I -e csv)

## remove some columns we are not interested in
while read f; do
  #echo " $(tput setaf 4)${f}$(tput sgr 0)"
  cols=("OwnerId" "CreatedById" "LastModifiedById" "RecordTypeId" "ProfileId")
  for col in ${cols[@]}
  do
    csvcut -n "$f" | grep $col > /dev/null
    if [ $? == 0 ]; then
      csvcut -C "$col" "$f" > temp
      mv temp "$f"
    fi
  done
done < <(fd -I -e csv)

## extract all IDs down to the given level
if [ $level == 2 ]; then
  while read f; do
    cat "$f" | awk -v id=$id '$0 ~ id {print $0}' | tr ',' '\n' | perl -ne 'print if /^[0-9a-zA-Z]{18}$/' >> ${rel_ids}
  done < <(fd -I -e csv)
  ids=$(cat ${rel_ids} | sort | uniq | tr '\n' '|')
  ids=${ids%|}
else
  ids=${id}
fi

## extract related records from the available csv files
while read f; do
  cat "$f" | awk -v id=$ids '$0 ~ id || NR==1{print $0}' > temp
  mv temp "$f"
done < <(fd -I -e csv)
