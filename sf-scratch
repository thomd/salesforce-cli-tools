#!/usr/bin/env bash

#
# Setup a new project and scratch org
#
# USAGE
#
#     sf-scratch -v <devhub>                 # create scratch org from <devhub> [default: devhub]
#     sf-scratch -a <alias>                  # create scratch org with alias <alias> [default: scratch1]
#     sf-scratch -d <days>                   # create scratch org for <days> days [default: 1]
#
#     sf-scratch --delete <alias>            # delete scratch org
#


yesno() {
  echo ""
  read -p "$1 [Y/n] " response
  [[ $response == "n" || $response == "N" ]] && exit 1
}

scratchOrgLimits(){
  echo
  sf org list limits -o devhub | awk 'NR<=2;/ScratchOrg/'
}

deleteScratchOrg() {
  [ -z "$1" ] && echo >&2 "org alias required!" && exit 1
  scratch_user=$(cat ~/.sfdx/alias.json | jq -r ".orgs.${1}")
  yesno " Delete Scratch Org $(tput setaf 2)${1}$(tput sgr0) with User $(tput setaf 2)${scratch_user}$(tput sgr0) from $(tput setaf 1)${devhub}$(tput sgr0) ?"
  echo
  sf org delete scratch -p -o ${scratch_user}
  scratchOrgLimits
}

devhub="devhub"
duration="1"
aliases=($(cat ~/.sfdx/alias.json | jq -r '.orgs | with_entries(select(.key | match("^scratch[0-9]+"))) | keys[] | sub("scratch";"")'))
IFS=$'\n'
alias="scratch$(echo "${aliases[*]}" | sort -n | awk '$0!=p+1{print p+1}{p=$0}END{print p+1}' | head -n 1)"
unset IFS

while [ $# -gt 0 ]; do
  case $1 in
    -v)
      shift
      devhub=$1
      ;;
    -a)
      shift
      alias=$1
      ;;
    -d)
      shift
      duration=$1
      ;;
    --delete)
      shift
      deleteScratchOrg "$1"
      exit 0
      ;;
    -h|--help)
      cat $0 | sed -n '/^#/p' | sed '/^##/d' | sed 1d | sed 's/^#/ /g' \
        | perl -pe "s/ #(.*)$/$(tput setaf 0)\1$(tput sgr 0)/" \
        | perl -pe "s/(USAGE|EXAMPLES)/$(tput setaf 0)\1$(tput sgr 0)/"
      exit 1
      ;;
    *)
      ;;
  esac
  shift
done

yesno "Create a $(tput setaf 2)${duration} day$(tput sgr0) Scratch Org $(tput setaf 1)${alias}$(tput sgr0) from $(tput setaf 1)${devhub}$(tput sgr0) ?"

[[ -f sfdx-project.json ]] && echo -e >&2 "$(tput setaf 1)\n You are already inside a Salesforce project!$(tput sgr0)" && exit 1

echo -e "\n  $(tput setaf 2)Generate SFDX Project$(tput sgr 0) ..."
sf project generate -x -n ${alias} > /dev/null
cd ${alias}
sf config set target-dev-hub ${devhub} > /dev/null
git init > /dev/null
git add . && git commit -m "project" > /dev/null

##| jq '.features += ["ContactsToMultipleAccounts"]' \
##| jq '.settings += {"languageSettings"}' \
##| jq '.settings.languageSettings += {"enableTranslationWorkbench":true}' \
##| jq '.settings.languageSettings += {"enableEndUserLanguages":true}' \
cat config/project-scratch-def.json \
  | jq ".orgName = \"${alias}\"" \
  | jq '.features += ["MultiCurrency"]' \
  | jq '.features += ["Communities"]' \
  | jq '.features += ["B2BCommerce"]' \
  | jq '.features += ["OrderManagement"]' \
  | jq '.settings += {"experienceBundleSettings":{"enableExperienceBundleMetadata":true}}' \
  | jq '.settings += {"communitiesSettings":{"enableNetworksEnabled":true,"enableOotbProfExtUserOpsEnable":true}}' \
  | jq '.settings += {"orderManagementSettings":{"enableOrderManagement":true}}' \
  | jq '.settings += {"commerceSettings":{"commerceEnabled":true}}' \
  | jq '.settings += {"orderSettings"}' \
  | jq '.settings.orderSettings += {"enableOrders":true}' \
  | jq '.settings.orderSettings += {"enableEnhancedCommerceOrders":true}' \
  | jq '.settings.orderSettings += {"enableOptionalPricebook":true}' \
  | jq '.settings.orderSettings += {"enableNegativeQuantity":false}' \
  | jq '.settings.orderSettings += {"enableOrderEvents":false}' \
  | jq '.settings.orderSettings += {"enableReductionOrders":true}' \
  | jq '.settings.orderSettings += {"enableZeroQuantity":false}' \
  | jq '. += {"language": "en_US"}' \
  > tmp; mv tmp config/project-scratch-def.json

git add . && git commit -m "scratch org definition file" > /dev/null

echo -e "  $(tput setaf 2)Install SFDX Project$(tput sgr 0) ..."
npm install --no-package-lock >/dev/null 2>&1

echo -e "  $(tput setaf 2)Create Scratch Org$(tput sgr 0) ..."
sf org create scratch -f config/project-scratch-def.json -y ${duration} -v ${devhub} -a ${alias}

echo -e "\n  $(tput setaf 2)Generate Admin Password$(tput sgr 0) ..."
sf org generate password -o ${alias} 2> /dev/null
sf org display user -o ${alias} 2> /dev/null | perl -pe "s/(Password)/$(tput setaf 2)\1$(tput sgr 0)/g"
sf org open -o ${alias}

sf config set target-org=${alias} > /dev/null
scratchOrgLimits

echo -e "\n  $(tput setaf 2)--> cd into '${alias}' and start working ...$(tput sgr0)"

exit 0
#echo -e "\n  $(tput setaf 2)Generate Standard User$(tput sgr 0) ..."
#username=$(sf org display -o ${alias} --json | jq -r '.result.signupUsername')
#cat <<EOF > config/user-def.json
#{
    #"Username": "`echo $username`.standard",
    #"FirstName": "Standard",
    #"LastName": "User",
    #"Email": "thomas.duerr@arvato-scs.com",
    #"Alias": "SUser",
    #"TimeZoneSidKey": "Europe/Berlin",
    #"LocaleSidKey": "de_DE_EURO",
    #"EmailEncodingKey": "UTF-8",
    #"LanguageLocaleKey": "en_US",
    #"profileName": "Standard User",
    #"permsets": [],
    #"generatePassword": true
#}
#EOF
#sf org create user -o ${alias} -a stduser -f config/user-def.json
#git add . && git commit -m "add standard user"

#sf org list users -o "${username}.standard"

