#!/usr/bin/env bash

#
# Build-deploy-publish a project or deploy single files to a Salesforce Org
#
# USAGE
#
#     sf-deploy                            # deploy files in git-index and -workspace in watch-mode (or build-deploy-publish if no files were changed)
#     sf-deploy -o ORG                     # deploy to ORG
#     sf-deploy -m NAME1 -m NAME2          # deploy metadata of NAME1 and NAME2
#     sf-deploy -x                         # explicitly build, deploy and publish (e.g. if git-index is not empty)
#
# COMMANDS
#
#     (cd frontend && npm run frontend:build)
#     sf project deploy start -x manifest/package.xml --concise
#     sf project deploy start -m NAME
#     sf community publish -n SITE_NAME
#

yesno() {
  echo ""
  read -r -p "$1 [Y/n] " response
  [[ $response == "n" || $response == "N" ]] && exit 1
}

show_help() {
  awk '/^[^ #]/{c=1}c==0{print $0}' $0 | sed -n '/^#/p' | sed 1d | sed 's/^#/ /g' \
    | perl -pe "s/ #(.*)$/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/(USAGE|EXAMPLES|COMMANDS)/$(tput setaf 0)\1$(tput sgr 0)/" \
    | perl -pe "s/\`(.+)\`/$(tput sgr 0 1)\1$(tput sgr 0)/"
  exit 1
}

setTargetOrg() {
  if [[ -z "$org" ]]; then
    org=$(jq -r '."target-org" | select( . != null )' .sf/config.json 2>/dev/null)
  fi
  if [[ -z "$org" ]]; then
    org=$(jq -r '."target-org" | select( . != null )' ~/.sf/config.json 2>/dev/null)
  fi
  if [[ -z "$org" ]]; then
    echo -e >&2 "\n $(tput setaf 1)Missing target org$(tput sgr 0)\n\n   Either provide with $(tput setaf 0)-o$(tput sgr 0) option, or set via $(tput setaf 0)sf config set target-org <org>$(tput sgr 0)"
    exit 1
  fi
}

org=""
result=$(mktemp)
names=""
all=false

while [ $# -gt 0 ]; do
  case $1 in
    -o)
      shift
      org=$1
      ;;
    -m)
      shift
      if [[ $names == "" ]]; then
        [[ $1 = *" "* ]] && names="\"$1\"" || names="$1"
      else
        [[ $1 = *" "* ]] && names="${names} -m \"$1\"" || names="${names} -m $1"
      fi
      ;;
    -x)
      all=true
      ;;
    -h|--help)
      show_help
      ;;
    *)
      ;;
  esac
  shift
done
setTargetOrg

showresult() {
  sed 1,2d "$result" | perl -pe "s/(Component Failures \[\d+\])$/ $(tput setaf 1)\1$(tput sgr 0)/" | cut -c -"$(tput cols)"
  deployid=$(grep "Deploy ID" | perl -pe 's/Deploy ID: (.*)/\1/' "$result")
  orgname=$(sf data query -q "SELECT Domain FROM Domain WHERE HttpsOption = 'CommunityAlt'" -o "$org" --json | jq -r '.result.records[].Domain' | perl -pe 's/(.+)--.+/\1/')
  deployurl="https://${orgname}--${1}.sandbox.lightning.force.com/lightning/setup/DeployStatus/page?address=/changemgmt/monitorDeploymentsDetails.apexp?asyncId=${deployid}"
  echo -e "\n $(tput setaf 1)Deployment Status:$(tput sgr0)\n  ${deployurl}"
}

deployAll() {
  echo -e "\n $(tput setaf 2)Build Frontend CSS$(tput sgr0) ..."
  [[ $DEBUG == "1" ]] && echo -e "\n   $(tput setaf 0)(cd frontend && npm run frontend:build)$(tput sgr0)\n"
  (cd frontend && npm run frontend:build >/dev/null)
  echo " $(tput setaf 2)Deploy$(tput sgr0) ..."
  [[ $DEBUG == "1" ]] && echo -e "\n   $(tput setaf 0)sf project deploy start -x manifest/package.xml --concise -o ${org}$(tput sgr0)\n"
  sf project deploy start -x manifest/package.xml --concise -o "$org" > "$result"
  # shellcheck disable=SC2181
  if [[ $? == 0 ]]; then
    echo -e "\n $(tput setaf 2)Publish$(tput sgr0) ..."
    declare -a sitenames
    sitenames=("${sitenames[@]}" "$(sf data query -o "$org" -q "SELECT Name FROM Site WHERE SiteType='ChatterNetwork'" --json | jq -r '.result.records[].Name')")
    [[ $DEBUG == "1" ]] && echo
    # shellcheck disable=SC2068
    for sitename in ${sitenames[@]}; do
      [[ $DEBUG == "1" ]] && echo -e "   $(tput setaf 0)sf community publish -n \"${sitename/_/ }\" -o ${org}$(tput sgr0)"
      eval "sf community publish -n \"${sitename/_/ }\" -o ${org} >/dev/null"
      sleep 30
    done
    [[ $DEBUG == "1" ]] && echo
    domain=$(sf data query -o "$org" -q "SELECT Domain FROM Domain WHERE HttpsOption='CommunityAlt'" --json | jq -r '.result.records[].Domain')
    echo -e " $(tput setaf 2)Finish$(tput sgr0): ${domain}"
  else
    showresult "$org"
  fi
  git restore force-app/main/default/staticresources/b2bTheme.css
}

if [[ ! $names == "" ]]; then
  yesno " Deploy Metadata $(echo "$names" | perl -pe "s/ -m/,/g" | perl -pe "s/(\w+)/$(tput setaf 4)\1$(tput sgr0)/g") to $(tput setaf 1)${org}$(tput sgr0)?"
  echo
  [[ $DEBUG == "1" ]] && echo -e "   $(tput setaf 0)sf project deploy start -o ${org} -m ${names}$(tput sgr0)\n"
  eval "sf project deploy start -o ${org} -m ${names}"
elif [[ $(git diff HEAD --name-only | wc -l | tr -d ' ') == 0 || $all == true ]]; then
  yesno " Build, Deploy and Publish to $(tput setaf 1)${org}$(tput sgr0)?"
  deployAll
else
  yesno " Deploy $(tput setaf 2)git index$(tput sgr0) to $(tput setaf 1)${org}$(tput sgr0)?"
  echo
  session=$(mktemp)
  watchexec -q --project-origin . --watch force-app -- sf-deploy-index $org "$session"
fi


